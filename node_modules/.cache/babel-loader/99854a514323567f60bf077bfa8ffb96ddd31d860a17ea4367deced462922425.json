{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/appointment-planner/src/components/contactPicker/ContactPicker.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = _ref => {\n  let {\n    contacts,\n    handleChange,\n    value,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleChange,\n      value: value,\n      name: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No Contact Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), contacts.map(contact => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: contact,\n          children: contact\n        }, contact, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPicker;\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","_ref","contacts","handleChange","value","name","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","_c","$RefreshReg$"],"sources":["/home/ec2-user/environment/appointment-planner/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({contacts, handleChange, value, name}) => {\r\n  \r\n  return (\r\n    <>\r\n    <select onChange={handleChange}\r\n            value={value}\r\n            name={name}\r\n    >\r\n      <option value=\"\" >No Contact Selected</option>\r\n      {contacts.map((contact) => {\r\n        return (\r\n          <option value={contact} key={contact}>\r\n            {contact}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n    </>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAA2C;EAAA,IAA1C;IAACC,QAAQ;IAAEC,YAAY;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAAJ,IAAA;EAEjE,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACAT,OAAA;MAAQU,QAAQ,EAAEJ,YAAa;MACvBC,KAAK,EAAEA,KAAM;MACbC,IAAI,EAAEA,IAAK;MAAAC,QAAA,gBAEjBT,OAAA;QAAQO,KAAK,EAAC,EAAE;QAAAE,QAAA,EAAE;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAC7CT,QAAQ,CAACU,GAAG,CAAEC,OAAO,IAAK;QACzB,oBACEhB,OAAA;UAAQO,KAAK,EAAES,OAAQ;UAAAP,QAAA,EACpBO;QAAO,GADmBA,OAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAE3B;MAEb,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK,iBACN;AAEP,CAAC;AAACG,EAAA,GAnBWd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}